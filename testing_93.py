from  operator import add, sub, mul, truediv
import itertools

def seq_length(s, c=1):
	while c in s: c+= 1
	return c-1

maxt, maxs = 0, 0
for terms in itertools.combinations(range(1, 10), 4):
	s = set()
	for n in itertools.permutations(terms):
		for op in itertools.product([add, mul, sub, truediv], repeat=3):
			x = op[0](op[1](n[0],n[1]),op[2](n[2],n[3]))    # (a.b).(c.d)
			if x%1 == 0 and x > 0: s.add(int(x))
			x = op[0](op[1](op[2](n[0],n[1]),n[2]),n[3])    # ((a.b).c).d
			if x%1 == 0 and x > 0: s.add(int(x))

		if seq_length(s) > maxs: maxs, maxt = seq_length(s), terms
	print(len(s),terms)

print "Terms that produce longest set of consecutive digits", ''.join(str(i) for i in maxt)

'''
(31, (1, 2, 3, 4))
(35, (1, 2, 3, 5))
(41, (1, 2, 3, 6))
(42, (1, 2, 3, 7))
(50, (1, 2, 3, 8))
(52, (1, 2, 3, 9))
(44, (1, 2, 4, 5))
(48, (1, 2, 4, 6))
(55, (1, 2, 4, 7))
(57, (1, 2, 4, 8))
(63, (1, 2, 4, 9))
(59, (1, 2, 5, 6))
(58, (1, 2, 5, 7))
(70, (1, 2, 5, 8))
(68, (1, 2, 5, 9))
(72, (1, 2, 6, 7))
(74, (1, 2, 6, 8))
(82, (1, 2, 6, 9))
(80, (1, 2, 7, 8))
(81, (1, 2, 7, 9))
(87, (1, 2, 8, 9))
(49, (1, 3, 4, 5))
(56, (1, 3, 4, 6))
(58, (1, 3, 4, 7))
(60, (1, 3, 4, 8))
(67, (1, 3, 4, 9))
(61, (1, 3, 5, 6))
(63, (1, 3, 5, 7))
(68, (1, 3, 5, 8))
(74, (1, 3, 5, 9))
(70, (1, 3, 6, 7))
(79, (1, 3, 6, 8))
(70, (1, 3, 6, 9))
(75, (1, 3, 7, 8))
(84, (1, 3, 7, 9))
(86, (1, 3, 8, 9))
(62, (1, 4, 5, 6))
(68, (1, 4, 5, 7))
(73, (1, 4, 5, 8))
(72, (1, 4, 5, 9))
(73, (1, 4, 6, 7))
(77, (1, 4, 6, 8))
(83, (1, 4, 6, 9))
(80, (1, 4, 7, 8))
(83, (1, 4, 7, 9))
(84, (1, 4, 8, 9))
(68, (1, 5, 6, 7))
(79, (1, 5, 6, 8))
(80, (1, 5, 6, 9))
(82, (1, 5, 7, 8))
(85, (1, 5, 7, 9))
(83, (1, 5, 8, 9))
(71, (1, 6, 7, 8))
(86, (1, 6, 7, 9))
(91, (1, 6, 8, 9))
(73, (1, 7, 8, 9))
(59, (2, 3, 4, 5))
(58, (2, 3, 4, 6))
(69, (2, 3, 4, 7))
(66, (2, 3, 4, 8))
(76, (2, 3, 4, 9))
(68, (2, 3, 5, 6))
(75, (2, 3, 5, 7))
(79, (2, 3, 5, 8))
(83, (2, 3, 5, 9))
(82, (2, 3, 6, 7))
(84, (2, 3, 6, 8))
(82, (2, 3, 6, 9))
(96, (2, 3, 7, 8))
(97, (2, 3, 7, 9))
(105, (2, 3, 8, 9))
(72, (2, 4, 5, 6))
(83, (2, 4, 5, 7))
(77, (2, 4, 5, 8))
(88, (2, 4, 5, 9))
(83, (2, 4, 6, 7))
(74, (2, 4, 6, 8))
(91, (2, 4, 6, 9))
(92, (2, 4, 7, 8))
(104, (2, 4, 7, 9))
(102, (2, 4, 8, 9))
(96, (2, 5, 6, 7))
(98, (2, 5, 6, 8))
(101, (2, 5, 6, 9))
(102, (2, 5, 7, 8))
(103, (2, 5, 7, 9))
(111, (2, 5, 8, 9))
(105, (2, 6, 7, 8))
(107, (2, 6, 7, 9))
(113, (2, 6, 8, 9))
(113, (2, 7, 8, 9))
(85, (3, 4, 5, 6))
(86, (3, 4, 5, 7))
(88, (3, 4, 5, 8))
(96, (3, 4, 5, 9))
(92, (3, 4, 6, 7))
(88, (3, 4, 6, 8))
(98, (3, 4, 6, 9))
(95, (3, 4, 7, 8))
(106, (3, 4, 7, 9))
(109, (3, 4, 8, 9))
(96, (3, 5, 6, 7))
(104, (3, 5, 6, 8))
(99, (3, 5, 6, 9))
(101, (3, 5, 7, 8))
(110, (3, 5, 7, 9))
(112, (3, 5, 8, 9))
(114, (3, 6, 7, 8))
(109, (3, 6, 7, 9))
(113, (3, 6, 8, 9))
(121, (3, 7, 8, 9))
(102, (4, 5, 6, 7))
(109, (4, 5, 6, 8))
(103, (4, 5, 6, 9))
(109, (4, 5, 7, 8))
(107, (4, 5, 7, 9))
(112, (4, 5, 8, 9))
(110, (4, 6, 7, 8))
(120, (4, 6, 7, 9))
(124, (4, 6, 8, 9))
(116, (4, 7, 8, 9))
(114, (5, 6, 7, 8))
(116, (5, 6, 7, 9))
(125, (5, 6, 8, 9))
(118, (5, 7, 8, 9))
(125, (6, 7, 8, 9))
'''